from flask import Flask, render_template_string, request, jsonify, session
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from selenium.common.exceptions import TimeoutException
import pandas as pd
import threading
import time
import io
import traceback
import os
import uuid
import re
import random
import time

app = Flask(__name__)
app.secret_key = os.environ.get('SECRET_KEY', '631817fd2b7423dbda6ed9ff8ab254522cab62cc947ca326b714c12a7385e139')

user_contexts = {}

def get_uid():
    if 'uid' not in session:
        session['uid'] = str(uuid.uuid4())
    return session['uid']

def get_ctx():
    uid = get_uid()
    if uid not in user_contexts:
        user_contexts[uid] = {
            'driver': None,
            'progress_list': [],
            'stop_flag': False,
            'session_active': False,
            'sending_flag': False,
            'logs': [],
            'failed_numbers': [],
            'success_count': 0,
            'failed_count': 0
        }
    return uid, user_contexts[uid]

HTML = """
<!DOCTYPE html>
<html lang="ru">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>WhatsApp —Ä–∞—Å—Å—ã–ª–∫–∞</title>
  <meta name="description" content="–£–¥–æ–±–Ω–∞—è –≤–µ–±‚Äë–ø–∞–Ω–µ–ª—å –¥–ª—è –º–∞—Å—Å–æ–≤–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ WhatsApp: –∑–∞–≥—Ä—É–∑–∫–∞ Excel, —Ç–µ–∫—Å—Ç –∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è, –º–Ω–æ–≥–æ–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ —Å–µ—Å—Å–∏–∏, —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤—Ö–æ–¥–∞.">
  <meta name="keywords" content="WhatsApp, —Ä–∞—Å—Å—ã–ª–∫–∞, –º–∞—Å—Å–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è, WhatsApp Web, Excel, –º–∞—Ä–∫–µ—Ç–∏–Ω–≥">
  <meta name="robots" content="index, follow">
  <meta name="theme-color" content="#25d366">

  <!-- Open Graph -->
  <meta property="og:title" content="WhatsApp —Ä–∞—Å—Å—ã–ª–∫–∞">
  <meta property="og:description" content="–ú–∞—Å—Å–æ–≤–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π —á–µ—Ä–µ–∑ WhatsApp Web. –ò–º–ø–æ—Ä—Ç –Ω–æ–º–µ—Ä–æ–≤ –∏–∑ Excel, –ø–æ–¥–ø–∏—Å–∏ –∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º, –ø—Ä–æ–≥—Ä–µ—Å—Å –∏ –æ—Ç—á—ë—Ç.">
  <meta property="og:type" content="website">
  <meta property="og:image" content="https://static.whatsapp.net/rsrc.php/v3/yV/r/_-QK4QpCml_.png">

  <!-- Twitter Card -->
  <meta name="twitter:card" content="summary_large_image">
  <meta name="twitter:title" content="WhatsApp —Ä–∞—Å—Å—ã–ª–∫–∞">
  <meta name="twitter:description" content="–ò–º–ø–æ—Ä—Ç –∏–∑ Excel, —Ç–µ–∫—Å—Ç/–∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è, –ø—Ä–æ–≥—Ä–µ—Å—Å, –º–Ω–æ–≥–æ–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ —Å–µ—Å—Å–∏–∏.">
  <meta name="twitter:image" content="https://static.whatsapp.net/rsrc.php/v3/yV/r/_-QK4QpCml_.png">

  <link rel="icon" href="https://static.whatsapp.net/rsrc.php/v3/yV/r/_-QK4QpCml_.png">
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
  <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.1/font/bootstrap-icons.css" rel="stylesheet">
  <style>
    body {
      background: linear-gradient(180deg, #e8f5e9 0%, #f0f2f5 40%, #f7f9fb 100%);
      min-height: 100vh;
    }
    .app-header {
      background: #25d366;
      color: #fff;
      border-radius: 1rem;
      padding: 1.25rem 1.5rem;
      box-shadow: 0 8px 18px rgba(37, 211, 102, 0.25);
    }
    .card {
      border: none;
      border-radius: 1rem;
      box-shadow: 0 8px 22px rgba(0,0,0,0.06);
    }
    .card .card-title { font-weight: 600; }
    #progress-box { max-height: 300px; overflow-y: auto; font-family: monospace; font-size: 0.92em; }
    .qr-box { text-align:center; }
    .qr-box img { border: 1px solid #e6e6e6; border-radius: .75rem; padding: 8px; background: #fff; }
    .status-label { font-weight: 600; }
    .btn-success { background-color: #25d366; border-color: #22c25c; }
    .btn-success:hover { background-color: #20b957; border-color: #1ea651; }
    .btn-primary { background-color: #128c7e; border-color: #0f7a6d; }
    .btn-primary:hover { background-color: #0f7a6d; border-color: #0d6b60; }
    .contact-link { text-decoration: none; }
    .contact-link .bi { font-size: 1.25rem; }
    .contact-card .list-group-item { border: none; }
  </style>
</head>
<body>
<div class="container py-4">
  <div class="app-header mb-4 d-flex align-items-center justify-content-between">
    <h1 class="h4 m-0 d-flex align-items-center gap-2"><i class="bi bi-whatsapp"></i> WhatsApp —Ä–∞—Å—Å—ã–ª–∫–∞</h1>
    <div class="small opacity-75">–ú–Ω–æ–≥–æ–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ —Å–µ—Å—Å–∏–∏ ‚Ä¢ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤—Ö–æ–¥–∞</div>
  </div>

  <!-- –°–µ—Å—Å–∏—è -->
  <div class="card mb-4">
    <div class="card-body">
      <h5 class="card-title"><i class="bi bi-box-arrow-in-right"></i> –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ WhatsApp Web</h5>
      <p class="card-text">–°–Ω–∞—á–∞–ª–∞ –æ—Ç–∫—Ä–æ–π—Ç–µ WhatsApp Web, –æ—Ç—Å–∫–∞–Ω–∏—Ä—É–π—Ç–µ QR-–∫–æ–¥, –∫–æ—Ç–æ—Ä—ã–π –ø–æ—è–≤–∏—Ç—Å—è –Ω–∏–∂–µ, –∏ –¥–æ–∂–¥–∏—Ç–µ—Å—å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –≤—Ö–æ–¥–∞. –õ—É—á—à–µ –≤—Å–µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–µ—Ä–≤–∏—Å –Ω–∞ –ü–ö, —á—Ç–æ–±—ã —Å —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –æ—Ç—Å–∫–∞–Ω–∏—Ä–æ–≤–∞—Ç—å QR.</p>
      <button id="btn-qr" class="btn btn-primary"><i class="bi bi-qr-code-scan"></i> –û—Ç–∫—Ä—ã—Ç—å WhatsApp Web</button>
      <span id="status" class="ms-3 status-label text-muted"></span>
      <div class="qr-box mt-3">
        <img id="qr-image" src="" alt="QR –¥–ª—è WhatsApp" style="max-width:220px; display:none;">
      </div>
    </div>
  </div>

  <!-- –§–æ—Ä–º–∞ —Ä–∞—Å—Å—ã–ª–∫–∏ -->
  <div class="card mb-4">
    <div class="card-body">
      <h5 class="card-title"><i class="bi bi-envelope-paper"></i> –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ä–∞—Å—Å—ã–ª–∫–∏</h5>
      <form id="send-form" enctype="multipart/form-data">
        <div class="mb-3">
          <label for="file" class="form-label">üìÇ Excel —Å –Ω–æ–º–µ—Ä–∞–º–∏ (.xlsx)</label>
          <input class="form-control" type="file" id="file" name="file" required accept=".xlsx">
          <div class="form-text">
            –¢—Ä–µ–±—É–µ—Ç—Å—è —Ñ–∞–π–ª Excel —Å –∫–æ–ª–æ–Ω–∫–æ–π <code>phone</code>, –≥–¥–µ –ø–æ–¥ –Ω–µ–π –∏–¥—É—Ç –Ω–æ–º–µ—Ä–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ
            <code>+79XXXXXXXXX</code> (–±–µ–∑ –ø—Ä–æ–±–µ–ª–æ–≤ –∏ —Ç–∏—Ä–µ).
          </div>
        </div>
        <div class="mb-3">
          <label for="message" class="form-label">‚úçÔ∏è –°–æ–æ–±—â–µ–Ω–∏–µ</label>
          <textarea class="form-control" id="message" name="message" rows="4" placeholder="–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç —Ä–∞—Å—Å—ã–ª–∫–∏..."></textarea>
        </div>
        <div class="mb-3">
          <label for="image" class="form-label">üñºÔ∏è –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)</label>
          <input class="form-control" type="file" id="image" name="image" accept="image/*">
        </div>
        <div class="mb-3">
            <label class="form-label">‚è± –ò–Ω—Ç–µ—Ä–≤–∞–ª –º–µ–∂–¥—É —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏ (—Å–µ–∫—É–Ω–¥—ã)</label>
            <div class="d-flex gap-2">
                <input type="number" class="form-control" id="interval_min" name="interval_min" value="10" min="1" required>
                <span class="align-self-center">–¥–æ</span>
                <input type="number" class="form-control" id="interval_max" name="interval_max" value="30" min="1" required>
            </div>
            <div class="form-text">–î–ª—è –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏: –Ω–∞–ø—Ä–∏–º–µ—Ä 10‚Äì30 —Å–µ–∫—É–Ω–¥</div>
        </div>
        <div class="d-flex gap-2">
          <button type="submit" class="btn btn-success" id="btn-send" disabled><i class="bi bi-send-check"></i> –ó–∞–ø—É—Å—Ç–∏—Ç—å</button>
          <button type="button" class="btn btn-danger" id="btn-stop" disabled><i class="bi bi-stop-circle"></i> –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å</button>
        </div>
      </form>
    </div>
  </div>

  <!-- –ü—Ä–æ–≥—Ä–µ—Å—Å -->
  <div class="card">
    <div class="card-body">
      <h5 class="card-title"><i class="bi bi-graph-up"></i> –ü—Ä–æ–≥—Ä–µ—Å—Å —Ä–∞—Å—Å—ã–ª–∫–∏</h5>
      <div id="progress-box" class="border bg-light p-2 rounded mb-3"></div>
      <div class="progress">
        <div id="progress-bar" class="progress-bar progress-bar-striped progress-bar-animated bg-success" role="progressbar" style="width: 0%">0%</div>
      </div>
      <div class="mt-3">
        <button type="button" class="btn btn-info" id="btn-report" disabled>
          <i class="bi bi-file-earmark-text"></i> –ü–æ–∫–∞–∑–∞—Ç—å —Ñ–∏–Ω–∞–ª—å–Ω—ã–π –æ—Ç—á–µ—Ç
        </button>
      </div>
    </div>
  </div>

  <!-- –§–∏–Ω–∞–ª—å–Ω—ã–π –æ—Ç—á–µ—Ç -->
  <div class="card mt-4" id="report-card" style="display: none;">
    <div class="card-body">
      <h5 class="card-title"><i class="bi bi-clipboard-data"></i> –§–∏–Ω–∞–ª—å–Ω—ã–π –æ—Ç—á–µ—Ç</h5>
      <div id="report-content"></div>
    </div>
  </div>

  <!-- –ö–æ–Ω—Ç–∞–∫—Ç—ã –¥–ª—è –ø–æ–º–æ—â–∏ -->
  <div class="card mt-4 contact-card">
    <div class="card-body">
      <h5 class="card-title mb-3"><i class="bi bi-life-preserver"></i> –ù—É–∂–Ω–∞ –ø–æ–º–æ—â—å?</h5>
      <p class="text-muted mb-3">–ü–∏—à–∏—Ç–µ, –µ—Å–ª–∏ –≤–æ–∑–Ω–∏–∫–ª–∏ —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ ‚Äî –æ—Ç–≤–µ—á—É –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –±—ã—Å—Ç—Ä–æ.</p>
      <div class="d-flex flex-wrap gap-2">
        <a class="btn btn-outline-primary contact-link" href="https://t.me/slnt_andy" target="_blank" rel="noopener">
          <i class="bi bi-telegram"></i> Telegram: @slnt_andy
        </a>
        <a class="btn btn-outline-success contact-link" href="https://wa.me/79082144730" target="_blank" rel="noopener">
          <i class="bi bi-whatsapp"></i> WhatsApp: +7 908 214-47-30
        </a>
        <a class="btn btn-outline-secondary contact-link" href="https://m.vk.com/slnt_andy" target="_blank" rel="noopener">
          <i class="bi bi-person-lines-fill"></i> VK: @slnt_andy
        </a>
      </div>
    </div>
  </div>
</div>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
let sessionActive = false;
let sending = false;
let totalNumbers = 0;

function updateProgress(){
    // –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å
    $.get('/progress', function(data){
        $('#progress-box').empty();
        totalNumbers = data.total;
        let sentCount = 0;
        let failedCount = 0;
        
        data.status.forEach(item => {
            let color = item.sent ? 'green' : item.current ? 'orange' : 'black';
            let status = item.sent ? '‚úÖ' : item.current ? '‚è≥' : '‚ùå';
            $('#progress-box').append(`<div style="color:${color}">${item.number} - ${status}</div>`);
            
            if(item.sent) sentCount++;
            else if(!item.current) failedCount++;
        });
        
        let percent = totalNumbers > 0 ? Math.floor((sentCount/totalNumbers)*100) : 0;
        $('#progress-bar').css('width', percent+'%').text(`${percent}% (${sentCount}/${totalNumbers})`);
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫—Ä–∞—Ç–∫—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        if(totalNumbers > 0) {
            $('#progress-box').prepend(`<div class="mb-2 p-2 bg-light rounded"><strong>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:</strong> ‚úÖ ${sentCount} | ‚ùå ${failedCount} | ‚è≥ ${totalNumbers - sentCount - failedCount}</div>`);
        }
    });

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–∫–æ–Ω—á–µ–Ω–∞ –ª–∏ —Ä–∞—Å—Å—ã–ª–∫–∞
    $.get('/status', function(data){
        if(!data.sending){ // –ï—Å–ª–∏ —Ä–∞—Å—Å—ã–ª–∫–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∞
            if(sending){ // –ò –µ—Å–ª–∏ –Ω–∞ —Ñ—Ä–æ–Ω—Ç–µ –æ–Ω–∞ —Å—á–∏—Ç–∞–ª–∞—Å—å –∞–∫—Ç–∏–≤–Ω–æ–π
                $('#status').text('–†–∞—Å—Å—ã–ª–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞');
                sending = false;
                $('#btn-send').prop('disabled', false);
                $('#btn-stop').prop('disabled', true);
                $('#btn-report').prop('disabled', false); // –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫—É –æ—Ç—á–µ—Ç–∞
            }
        }
    });
}

function updateQR(){
    $.get('/qr', function(data){
        if(data.success && data.qr){
            $("#qr-image").attr("src", "data:image/png;base64," + data.qr).show();
        }
    });
}

function checkLogin(){
    $.get('/login_status', function(data){
        if(data.success && data.logged_in){
            $("#qr-image").hide();
            $("#status").text("‚úÖ –í—ã —É—Å–ø–µ—à–Ω–æ –≤–æ—à–ª–∏");
            $("#btn-send").prop("disabled", false);
        }
    });
}

// –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –∫–∞–∂–¥—ã–µ 5 —Å–µ–∫—É–Ω–¥
setInterval(checkLogin, 5000);

// –ó–∞–ø—Ä–∞—à–∏–≤–∞—Ç—å QR –∫–∞–∂–¥—ã–µ 5 —Å–µ–∫—É–Ω–¥
setInterval(updateQR, 5000);

$('#btn-qr').click(function(){
    $('#status').text('–û—Ç–∫—Ä—ã—Ç–∏–µ WhatsApp Web...');
    $.post('/start_session', function(data){
        if(data.success){
            sessionActive = true;
            $('#status').text('WhatsApp Web –æ—Ç–∫—Ä—ã—Ç, –æ—Ç—Å–∫–∞–Ω–∏—Ä—É–π—Ç–µ QR-–∫–æ–¥ –≤ –Ω–æ–≤–æ–º –æ–∫–Ω–µ');
            $('#btn-send').prop('disabled', false);
        } else {
            $('#status').text('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ —Å–µ—Å—Å–∏–∏');
        }
    });
});

$('#send-form').submit(function(e){
    e.preventDefault();
    if(!sessionActive){
        alert('–°–Ω–∞—á–∞–ª–∞ –æ—Ç–∫—Ä–æ–π—Ç–µ –∏ –æ—Ç—Å–∫–∞–Ω–∏—Ä—É–π—Ç–µ WhatsApp Web!');
        return;
    }
    if(sending){
        alert('–†–∞—Å—Å—ã–ª–∫–∞ —É–∂–µ –∑–∞–ø—É—â–µ–Ω–∞!');
        return;
    }

    let formData = new FormData(this);
    $('#btn-send').prop('disabled', true);
    $('#btn-stop').prop('disabled', false);
    sending = true;
    $('#status').text('–ó–∞–ø—É—â–µ–Ω–∞ —Ä–∞—Å—Å—ã–ª–∫–∞...');

    $.ajax({
        url: '/send',
        type: 'POST',
        data: formData,
        processData: false,
        contentType: false,
        success: function(data){
            if(!data.success){
                $('#status').text('–û—à–∏–±–∫–∞: ' + data.error);
                sending = false;
                $('#btn-send').prop('disabled', false);
                $('#btn-stop').prop('disabled', true);
            }
        },
        error: function(){
            $('#status').text('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ —Ä–∞—Å—Å—ã–ª–∫–∏');
            sending = false;
            $('#btn-send').prop('disabled', false);
            $('#btn-stop').prop('disabled', true);
        }
    });
});

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –∏ —Å—Ç–∞—Ç—É—Å–∞ –∫–∞–∂–¥—ã–µ 2 —Å–µ–∫—É–Ω–¥—ã
setInterval(updateProgress, 2000);

// –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ç—á–µ—Ç–∞ –∫–∞–∂–¥—ã–µ 5 —Å–µ–∫—É–Ω–¥ –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ä–∞—Å—Å—ã–ª–∫–∏
setInterval(function(){
    if(!sending && $('#btn-report').is(':enabled')) {
        // –ï—Å–ª–∏ —Ä–∞—Å—Å—ã–ª–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ –∏ –∫–Ω–æ–ø–∫–∞ –æ—Ç—á–µ—Ç–∞ –∞–∫—Ç–∏–≤–Ω–∞, –æ–±–Ω–æ–≤–ª—è–µ–º –æ—Ç—á–µ—Ç
        $.get('/final_report', function(data){
            if(data.success){
                const report = data.report;
                let reportHtml = `
                    <div class="row">
                        <div class="col-md-6">
                            <h6 class="text-success">‚úÖ –£—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: ${report.success_count}</h6>
                            <h6 class="text-danger">‚ùå –ù–µ—É—Å–ø–µ—à–Ω–æ: ${report.failed_count}</h6>
                            <h6 class="text-primary">üìä –û–±—â–∏–π –ø—Ä–æ—Ü–µ–Ω—Ç —É—Å–ø–µ—Ö–∞: ${report.success_rate}%</h6>
                        </div>
                        <div class="col-md-6">
                            <h6 class="text-info">üì± –í—Å–µ–≥–æ –Ω–æ–º–µ—Ä–æ–≤: ${report.total_numbers}</h6>
                        </div>
                    </div>
                `;
                
                if(report.failed_numbers && report.failed_numbers.length > 0){
                    reportHtml += `
                        <div class="mt-3">
                            <h6 class="text-danger">üìã –ù–µ—É—Å–ø–µ—à–Ω—ã–µ –Ω–æ–º–µ—Ä–∞:</h6>
                            <div class="border bg-light p-2 rounded" style="max-height: 200px; overflow-y: auto;">
                                ${report.failed_numbers.map(num => `<div class="text-danger">${num}</div>`).join('')}
                            </div>
                        </div>
                    `;
                }
                
                $('#report-content').html(reportHtml);
                $('#report-card').show();
            }
        });
    }
}, 5000);

$('#btn-stop').click(function(){
    $.post('/stop', function(data){
        if(data.success){
            $('#status').text('–†–∞—Å—Å—ã–ª–∫–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞');
            sending = false;
            $('#btn-send').prop('disabled', false);
            $('#btn-stop').prop('disabled', true);
        }
    });
});

// –ö–Ω–æ–ø–∫–∞ –ø–æ–∫–∞–∑–∞ –æ—Ç—á–µ—Ç–∞
$('#btn-report').click(function(){
    $.get('/final_report', function(data){
        if(data.success){
            const report = data.report;
            let reportHtml = `
                <div class="row">
                    <div class="col-md-6">
                        <h6 class="text-success">‚úÖ –£—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: ${report.success_count}</h6>
                        <h6 class="text-danger">‚ùå –ù–µ—É—Å–ø–µ—à–Ω–æ: ${report.failed_count}</h6>
                        <h6 class="text-primary">üìä –û–±—â–∏–π –ø—Ä–æ—Ü–µ–Ω—Ç —É—Å–ø–µ—Ö–∞: ${report.success_rate}%</h6>
                    </div>
                    <div class="col-md-6">
                        <h6 class="text-info">üì± –í—Å–µ–≥–æ –Ω–æ–º–µ—Ä–æ–≤: ${report.total_numbers}</h6>
                    </div>
                </div>
            `;
            
            if(report.failed_numbers && report.failed_numbers.length > 0){
                reportHtml += `
                    <div class="mt-3">
                        <h6 class="text-danger">üìã –ù–µ—É—Å–ø–µ—à–Ω—ã–µ –Ω–æ–º–µ—Ä–∞:</h6>
                        <div class="border bg-light p-2 rounded" style="max-height: 200px; overflow-y: auto;">
                            ${report.failed_numbers.map(num => `<div class="text-danger">${num}</div>`).join('')}
                        </div>
                    </div>
                `;
            }
            
            $('#report-content').html(reportHtml);
            $('#report-card').show();
        } else {
            alert('–û—Ç—á–µ—Ç –ø–æ–∫–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: ' + data.message);
        }
    });
});
</script>
</body>
</html>
"""

def log(msg):
    print(msg)

def run_whatsapp_session(uid):
    uid_ctx = user_contexts.get(uid)
    if uid_ctx is None:
        return
    try:
        # Ensure persistent Chrome user profile per uid (keeps WhatsApp login)
        profiles_root = os.path.abspath(os.path.join(os.getcwd(), 'profiles'))
        os.makedirs(profiles_root, exist_ok=True)
        profile_dir = os.path.join(profiles_root, uid)
        os.makedirs(profile_dir, exist_ok=True)

        chrome_options = webdriver.ChromeOptions()
        chrome_options.add_argument(f"--user-data-dir={profile_dir}")
        # Optional: avoid automation banners
        chrome_options.add_experimental_option("excludeSwitches", ["enable-automation"]) 
        chrome_options.add_experimental_option('useAutomationExtension', False)

        uid_ctx['driver'] = webdriver.Chrome(options=chrome_options)
        uid_ctx['driver'].get("https://web.whatsapp.com")
        uid_ctx['session_active'] = True
        log("WhatsApp Web –æ—Ç–∫—Ä—ã—Ç. –û—Ç—Å–∫–∞–Ω–∏—Ä—É–π—Ç–µ QR-–∫–æ–¥.")
    except Exception as e:
        log(f"–û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –±—Ä–∞—É–∑–µ—Ä–∞: {e}")
        uid_ctx['session_active'] = False

def send_messages_legacy(df, message):
    # Legacy function retained for reference; not used in multi-user mode
    pass

@app.route('/')
def index():
    return render_template_string(HTML)

def close_session(uid):
    uid_ctx = user_contexts.get(uid)
    if not uid_ctx:
        return
    driver = uid_ctx.get('driver')
    if driver:
        try:
            driver.quit()
            log("–ë—Ä–∞—É–∑–µ—Ä –∑–∞–∫—Ä—ã—Ç.")
        except:
            pass
        uid_ctx['driver'] = None
    uid_ctx['session_active'] = False

@app.route('/qr')
def get_qr():
    uid, ctx = get_ctx()
    driver = ctx.get('driver')
    if not driver:
        return jsonify(success=False, error="–ë—Ä–∞—É–∑–µ—Ä –Ω–µ –∑–∞–ø—É—â–µ–Ω")

    try:
        # –ù–∞—Ö–æ–¥–∏–º canvas —Å QR
        canvas = WebDriverWait(driver, 10).until(
            EC.presence_of_element_located((By.TAG_NAME, "canvas"))
        )
        # –ü–æ–ª—É—á–∞–µ–º Base64 —á–µ—Ä–µ–∑ JS
        qr_base64 = driver.execute_script(
            "return arguments[0].toDataURL('image/png').substring(22);", canvas
        )
        return jsonify(success=True, qr=qr_base64)
    except Exception as e:
        return jsonify(success=False, error=str(e))

@app.route('/login_status')
def login_status():
    uid, ctx = get_ctx()
    driver = ctx.get('driver')
    if not driver:
        return jsonify(success=False, logged_in=False, error="–ë—Ä–∞—É–∑–µ—Ä –Ω–µ –∑–∞–ø—É—â–µ–Ω")
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–≥—Ä—É–∑–∏–ª—Å—è –ª–∏ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å —á–∞—Ç–æ–≤
        driver.find_element(By.XPATH, "//div[@role='grid']")  

        # –ü—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ –∫–Ω–æ–ø–∫—É "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å"
        try:
            continue_btn = WebDriverWait(driver, 3).until(
                EC.element_to_be_clickable((
                    By.XPATH,
                    "//button[.//div[text()='–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å']]"
                ))
            )
            driver.execute_script("arguments[0].scrollIntoView(true);", continue_btn)
            continue_btn.click()
        except Exception:
            pass  # –µ—Å–ª–∏ –∫–Ω–æ–ø–∫–∏ –Ω–µ—Ç, –ø—Ä–æ—Å—Ç–æ –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º

        return jsonify(success=True, logged_in=True)
    except:
        return jsonify(success=True, logged_in=False)

@app.route('/start_session', methods=['POST'])
def start_session():
    uid, ctx = get_ctx()
    try:
        close_session(uid)
        # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫–∏ –∏ –æ—Ç—á–µ—Ç—ã –¥–ª—è –Ω–æ–≤–æ–π —Å–µ—Å—Å–∏–∏
        ctx['progress_list'] = []
        ctx['failed_numbers'] = []
        ctx['success_count'] = 0
        ctx['failed_count'] = 0
        ctx['logs'] = []
        threading.Thread(target=run_whatsapp_session, args=(uid,), daemon=True).start()
        return jsonify({'success': True, 'message': '–°–µ—Å—Å–∏—è –∑–∞–ø—É—â–µ–Ω–∞'})
    except Exception as e:
        error_text = traceback.format_exc()
        ctx['logs'].append(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ —Å–µ—Å—Å–∏–∏:\n{error_text}")
        return jsonify({'success': False, 'message': '–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ —Å–µ—Å—Å–∏–∏', 'details': str(e)})

@app.route('/status')
def status():
    uid, ctx = get_ctx()
    return jsonify(sending=ctx.get('sending_flag', False), stopped=ctx.get('stop_flag', False))

@app.route('/send', methods=['POST'])
def send():
    uid, ctx = get_ctx()
    if not ctx.get('session_active'):
        return jsonify(success=False, error="–°–µ—Å—Å–∏—è WhatsApp –Ω–µ –∑–∞–ø—É—â–µ–Ω–∞")
    ctx['stop_flag'] = False

    if ctx.get('sending_flag'):
        return jsonify({"status": "already_sending"})

    ctx['sending_flag'] = True
    
    # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫–∏
    ctx['failed_numbers'] = []
    ctx['success_count'] = 0
    ctx['failed_count'] = 0

    file = request.files.get('file')
    message = request.form.get('message')
    image = request.files.get('image')
    interval_min = request.form.get('interval_min', type=int, default=10)
    interval_max = request.form.get('interval_max', type=int, default=30)

    if interval_min > interval_max:
        interval_min, interval_max = interval_max, interval_min

    if not file:
        return jsonify(success=False, error="–§–∞–π–ª —Å –Ω–æ–º–µ—Ä–∞–º–∏ –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω")

    if not message and not image:
        return jsonify(success=False, error="–£–∫–∞–∂–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–ª–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ")

    image_path = None
    if image:
        image_path = os.path.abspath(f"temp_{int(time.time())}.png")
        image.save(image_path)

    try:
        in_memory_file = io.BytesIO(file.read())
        df = pd.read_excel(in_memory_file)
        if 'phone' not in df.columns:
            return jsonify(success=False, error="–í Excel –Ω–µ—Ç –∫–æ–ª–æ–Ω–∫–∏ 'phone'")
    except Exception as e:
        return jsonify(success=False, error=f"–û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è —Ñ–∞–π–ª–∞: {e}")

    threading.Thread(
        target=send_messages,
        args=(uid, df, message, image_path, interval_min, interval_max),
        daemon=True
    ).start()
    return jsonify(success=True)

def set_text_multiline(driver, element, text):
    lines = text.split('\n')
    for i, line in enumerate(lines):
        # –í—Å—Ç–∞–≤–ª—è–µ–º —Å—Ç—Ä–æ–∫—É —Ü–µ–ª–∏–∫–æ–º (—Å–º–∞–π–ª—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ)
        driver.execute_script("arguments[0].focus();", element)
        driver.execute_script("document.execCommand('insertText', false, arguments[0]);", line)
        
        # –ï—Å–ª–∏ —ç—Ç–æ –Ω–µ –ø–æ—Å–ª–µ–¥–Ω—è—è —Å—Ç—Ä–æ–∫–∞ ‚Üí –≤—Å—Ç–∞–≤–ª—è–µ–º –ø–µ—Ä–µ–Ω–æ—Å (Shift+Enter)
        if i < len(lines) - 1:
            element.send_keys(Keys.SHIFT, Keys.ENTER)

def send_messages(uid, df, message, image_path=None, interval_min=10, interval_max=30):
    uid_ctx = user_contexts.get(uid)
    if uid_ctx is None:
        return
    driver = uid_ctx.get('driver')
    if driver is None:
        uid_ctx['sending_flag'] = False
        return

    def normalize_phone(raw_value):
        """Normalize various phone formats to international +<country><number>.
        Examples:
        - 8 916-017-71-38 -> +79160177138
        - 89160177138     -> +79160177138
        - 9160177138      -> +79160177138 (assume RU for 10-digit starting with 9)
        - +380667542304   -> +380667542304
        - 00380667542304  -> +380667542304
        """
        s_raw = str(raw_value).strip()
        if not s_raw:
            return None
        digits = re.sub(r"\D", "", s_raw)
        if not digits:
            return None

        had_plus = s_raw.strip().startswith('+')

        # Convert 00-prefix to international
        if digits.startswith('00'):
            digits = digits[2:]

        # Russia-specific normalizations
        if len(digits) == 11 and digits.startswith('8'):
            # 8XXXXXXXXXX -> +7XXXXXXXXXX
            return "+7" + digits[1:]
        if len(digits) == 10 and digits.startswith('9'):
            # 9XXXXXXXXX -> +79XXXXXXXXX
            return "+7" + digits
        if len(digits) == 11 and digits.startswith('7'):
            return "+" + digits

        # Ukraine example 380...
        if len(digits) == 12 and digits.startswith('380'):
            return "+" + digits

        # If original had '+', keep it
        if had_plus:
            return "+" + digits

        # Fallback: prefix '+' to whatever we have if plausible length
        return "+" + digits

    # –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ —Å–ø–∏—Å–∫–∞ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –Ω–æ–º–µ—Ä–æ–≤ (–≤ –ø–æ—Ä—è–¥–∫–µ –∏—Å—Ö–æ–¥–Ω–æ–≥–æ —Ñ–∞–π–ª–∞)
    seen_numbers = set()
    unique_numbers = []
    for _, row in df.iterrows():
        raw = str(row['phone']).strip()
        # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –ø—É—Å—Ç—ã–µ/NaN/–Ω–µ–¥–∏–≥–∏—Ç–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è
        if not raw or raw.lower() in {"nan", "none"}:
            continue
        if re.sub(r"\D", "", raw) == "":
            continue
        normalized = normalize_phone(raw)
        if not normalized:
            continue
        if normalized in seen_numbers:
            continue
        seen_numbers.add(normalized)
        unique_numbers.append(normalized)

    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –∏ —Å—á–µ—Ç—á–∏–∫–æ–≤ –ø–æ —É–Ω–∏–∫–∞–ª—å–Ω—ã–º –Ω–æ–º–µ—Ä–∞–º
    uid_ctx['progress_list'] = [{
        'number': number,
        'sent': False,
        'current': False
    } for number in unique_numbers]
    uid_ctx['failed_numbers'] = []
    uid_ctx['success_count'] = 0
    uid_ctx['failed_count'] = 0

    # –†–∞–Ω—Ç–∞–π–º-–∑–∞—â–∏—Ç–∞ –æ—Ç –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ —Ä–∞–º–∫–∞—Ö –æ–¥–Ω–æ–π —Å–µ—Å—Å–∏–∏
    already_sent_numbers = set()

    for number in unique_numbers:
        if uid_ctx.get('stop_flag'):
            break

        # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º, –µ—Å–ª–∏ —ç—Ç–æ—Ç –Ω–æ–º–µ—Ä —É–∂–µ –±—ã–ª —É—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω —Ä–∞–Ω–µ–µ –≤ —ç—Ç–æ–π —Å–µ—Å—Å–∏–∏
        if number in already_sent_numbers:
            continue
        send_text = bool(message and message.strip())
        send_image = bool(image_path)

        # –û—Ç–º–µ—á–∞–µ–º —Ç–µ–∫—É—â–∏–π –Ω–æ–º–µ—Ä
        for item in uid_ctx['progress_list']:
            item['current'] = (item['number'] == number)

        try:
            # 1. –î–æ–∂–¥–∞—Ç—å—Å—è, –ø–æ–∫–∞ –Ω–µ –∏—Å—á–µ–∑–Ω—É—Ç –≤—Å–ø–ª—ã–≤–∞—é—â–∏–µ –æ–∫–Ω–∞ (–µ—Å–ª–∏ –µ—Å—Ç—å)
            try:
                WebDriverWait(driver, 3).until_not(
                    EC.presence_of_element_located((By.XPATH, "//div[contains(@role, 'dialog')]"))
                )
            except Exception:
                pass

            # 2. –ù–∞–π—Ç–∏ –∏ –∫–ª–∏–∫–Ω—É—Ç—å "–ù–æ–≤—ã–π —á–∞—Ç"
            new_chat_btn = WebDriverWait(driver, 20).until(
                EC.visibility_of_element_located((By.XPATH, "//span[@data-icon='new-chat-outline']/parent::*"))
            )
            driver.execute_script("arguments[0].scrollIntoView(true);", new_chat_btn)
            try:
                new_chat_btn.click()
            except Exception:
                driver.execute_script("arguments[0].click();", new_chat_btn)

            # 3. –ù–∞–π—Ç–∏ –ø–æ–ª–µ –ø–æ–∏—Å–∫–∞ –∏ –≤–≤–µ—Å—Ç–∏ –Ω–æ–º–µ—Ä (–∫–æ–Ω—Ç–µ–Ω—Ç-—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º–æ–µ –ø–æ–ª–µ)
            search_xpaths = [
                # –¢–æ—á–Ω–æ–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –º–µ—Ç–∫–µ —Å —É—á–µ—Ç–æ–º –Ω–µ—Ä–∞–∑—Ä—ã–≤–Ω—ã—Ö –ø—Ä–æ–±–µ–ª–æ–≤ —á–µ—Ä–µ–∑ normalize-space
                "//div[@role='textbox' and @contenteditable='true' and normalize-space(@aria-label)='–ü–æ–∏—Å–∫ –ø–æ –∏–º–µ–Ω–∏ –∏–ª–∏ –Ω–æ–º–µ—Ä—É']",
                # –õ—é–±–∞—è –º–µ—Ç–∫–∞, —Å–æ–¥–µ—Ä–∂–∞—â–∞—è —Å–ª–æ–≤–æ '–ü–æ–∏—Å–∫'
                "//div[@role='textbox' and @contenteditable='true' and contains(@aria-label,'–ü–æ–∏—Å–∫')]",
                # –ß–∞—Å—Ç—ã–π –≤–∞—Ä–∏–∞–Ω—Ç –ø–æ–ª—è lexical editor
                "//div[@role='textbox' and @contenteditable='true' and @data-lexical-editor='true']",
                # –ó–∞–ø–∞—Å–Ω–æ–π –≤–∞—Ä–∏–∞–Ω—Ç –ø–æ –≤–∫–ª–∞–¥–∫–µ
                "//div[contains(@data-tab,'3') and @contenteditable='true']",
                # –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –∑–∞–ø–∞—Å–Ω–æ–π –≤–∞—Ä–∏–∞–Ω—Ç
                "//div[@role='textbox' and @contenteditable='true']"
            ]
            search_box = None
            for sx in search_xpaths:
                try:
                    search_box = WebDriverWait(driver, 8).until(
                        EC.presence_of_element_located((By.XPATH, sx))
                    )
                    break
                except Exception:
                    continue
            if not search_box:
                raise TimeoutException("–ü–æ–ª–µ –ø–æ–∏—Å–∫–∞ –Ω–æ–≤–æ–≥–æ —á–∞—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")

            # –§–æ–∫—É—Å –∏ –æ—á–∏—Å—Ç–∫–∞ –ø–æ–ª—è
            try:
                WebDriverWait(driver, 5).until(EC.visibility_of(search_box))
                driver.execute_script("arguments[0].focus();", search_box)
                search_box.click()
            except Exception:
                pass

            # –ù–∞–¥–µ–∂–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ contenteditable: Ctrl+A –∏ Backspace
            try:
                search_box.send_keys(Keys.CONTROL, 'a')
                search_box.send_keys(Keys.BACK_SPACE)
            except Exception:
                pass

            # –í—Å—Ç–∞–≤–∫–∞ –Ω–æ–º–µ—Ä–∞: —Å–Ω–∞—á–∞–ª–∞ send_keys –≤ —Å–∞–º —ç–ª–µ–º–µ–Ω—Ç
            typed = False
            try:
                search_box.send_keys(number)
                typed = True
            except Exception:
                typed = False
            # –§–æ–ª–ª–±–µ–∫: –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤ activeElement
            if not typed:
                try:
                    active = driver.switch_to.active_element
                    active.send_keys(number)
                    typed = True
                except Exception:
                    pass
            # –§–æ–ª–ª–±–µ–∫ —á–µ—Ä–µ–∑ execCommand
            if not typed:
                try:
                    driver.execute_script("arguments[0].focus(); document.execCommand('insertText', false, arguments[1]);", search_box, number)
                    typed = True
                except Exception:
                    pass

            # –î–∞–µ–º –≤—Ä–µ–º—è –≤–∏–∑—É–∞–ª—å–Ω–æ —É–≤–∏–¥–µ—Ç—å –Ω–∞–±—Ä–∞–Ω–Ω—ã–π –Ω–æ–º–µ—Ä (–º–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –ø–∞—É–∑–∞)
            time.sleep(0.1)

            # 4. –ï—Å–ª–∏ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è —Å–æ–æ–±—â–µ–Ω–∏–µ "–ù–µ –Ω–∞–π–¥–µ–Ω–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤" ‚Äî –æ—á–∏—â–∞–µ–º –ø–æ–ª–µ –∏ –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –Ω–æ–º–µ—Ä
            try:
                nf_elem = WebDriverWait(driver, 0.5).until(
                    EC.presence_of_element_located((
                        By.XPATH,
                        "//span[contains(normalize-space(text()), '–ù–µ –Ω–∞–π–¥–µ–Ω–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –¥–ª—è')]"
                    ))
                )
                if nf_elem:
                    try:
                        search_box.send_keys(Keys.CONTROL, 'a')
                        search_box.send_keys(Keys.BACK_SPACE)
                    except Exception:
                        pass
                    for item in uid_ctx['progress_list']:
                        if item['number'] == number:
                            item['current'] = False
                    uid_ctx['failed_numbers'].append(number)
                    uid_ctx['failed_count'] += 1
                    uid_ctx['logs'].append(f"–ù–æ–º–µ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ WhatsApp (–Ω–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –ø–æ–∏—Å–∫–∞): {number}")
                    time.sleep(0.1)
                    continue
            except Exception:
                pass

            # 5. –ü–µ—Ä–µ—Ö–æ–¥ –≤ —á–∞—Ç: –ø—Ä–æ–±—É–µ–º –∫–ª–∏–∫–Ω—É—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Å —Å–æ–≤–ø–∞–¥–∞—é—â–∏–º –Ω–æ–º–µ—Ä–æ–º, –∏–Ω–∞—á–µ –∂–º–µ–º Enter
            clicked_result = False
            try:
                # –ñ–¥–µ–º –ø–æ—è–≤–ª–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ (–º–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –æ–∂–∏–¥–∞–Ω–∏–µ)
                WebDriverWait(driver, 1).until(
                    EC.presence_of_all_elements_located((By.XPATH, "//span[@title]"))
                )
                candidates = driver.find_elements(By.XPATH, "//span[@title]")
                target_digits = re.sub(r"\D", "", number)
                for cand in candidates:
                    try:
                        title = cand.get_attribute('title') or cand.text or ''
                        cand_digits = re.sub(r"\D", "", title)
                        if cand_digits == target_digits or cand_digits.endswith(target_digits):
                            driver.execute_script("arguments[0].scrollIntoView({block:'center'});", cand)
                            cand.click()
                            clicked_result = True
                            break
                    except Exception:
                        continue
            except Exception:
                clicked_result = False

            if not clicked_result:
                search_box.send_keys(Keys.ENTER)
                uid_ctx['logs'].append(f"–û—Ç–∫—Ä—ã–≤–∞–µ–º —á–∞—Ç (Enter) –¥–ª—è: {number}")
                # –ï—Å–ª–∏ —á–∞—Ç –Ω–µ –æ—Ç–∫—Ä—ã–ª—Å—è –±—ã—Å—Ç—Ä–æ ‚Äî –ø–æ–≤—Ç–æ—Ä–∏–º Enter –µ—â—ë —Ä–∞–∑
                try:
                    WebDriverWait(driver, 3).until(
                        EC.presence_of_element_located((By.XPATH, "//footer"))
                    )
                except Exception:
                    try:
                        search_box.send_keys(Keys.ENTER)
                        uid_ctx['logs'].append(f"–ü–æ–≤—Ç–æ—Ä–Ω—ã–π Enter –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è —á–∞—Ç–∞: {number}")
                    except Exception:
                        pass
            else:
                uid_ctx['logs'].append(f"–û—Ç–∫—Ä—ã–≤–∞–µ–º —á–∞—Ç (–∫–ª–∏–∫ –ø–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—É) –¥–ª—è: {number}")

            # 5. –î–æ–∂–¥–∞—Ç—å—Å—è –æ—Ç–∫—Ä—ã—Ç–∏—è —á–∞—Ç–∞ (–µ—Å–ª–∏ –Ω–µ –æ—Ç–∫—Ä—ã–ª—Å—è ‚Äî –Ω–æ–º–µ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º)
            try:
                WebDriverWait(driver, 15).until(
                    EC.presence_of_element_located((By.XPATH, "//footer"))
                )
            except TimeoutException:
                # –ß–∞—Ç –Ω–µ –æ—Ç–∫—Ä—ã–ª—Å—è ‚Äî –≤–µ—Ä–æ—è—Ç–Ω–æ, –Ω–æ–º–µ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü—Ä–æ–ø—É—Å–∫–∞–µ–º.
                for item in uid_ctx['progress_list']:
                    if item['number'] == number:
                        item['current'] = False
                uid_ctx['failed_numbers'].append(number)
                uid_ctx['failed_count'] += 1
                uid_ctx['logs'].append(f"–ù–æ–º–µ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ WhatsApp: {number}")
                time.sleep(0.1)
                continue

            # 6. –û—Ç–ø—Ä–∞–≤–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
            if send_image:
                attach_btn = WebDriverWait(driver, 20).until(
                    EC.element_to_be_clickable((By.XPATH, "//button[@title='–ü—Ä–∏–∫—Ä–µ–ø–∏—Ç—å']"))
                )
                attach_btn.click()

                img_input = WebDriverWait(driver, 20).until(
                    EC.presence_of_element_located((By.XPATH, "//input[@type='file' and contains(@accept, 'image')]"))
                )
                img_input.send_keys(image_path)

                WebDriverWait(driver, 20).until(
                    EC.presence_of_element_located((By.XPATH, "//img[@alt='–ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä']"))
                )

                if send_text:
                    caption_box = WebDriverWait(driver, 10).until(
                        EC.presence_of_element_located((By.XPATH, "//div[@contenteditable='true' and @aria-label='–î–æ–±–∞–≤—å—Ç–µ –ø–æ–¥–ø–∏—Å—å']"))
                    )
                    caption_box.click()
                    set_text_multiline(driver, caption_box, message)

                # –ö–Ω–æ–ø–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏
                send_btn_xpaths = [
                    "//div[@role='button' and @aria-label='–û—Ç–ø—Ä–∞–≤–∏—Ç—å']",
                    "//button[@aria-label='–û—Ç–ø—Ä–∞–≤–∏—Ç—å']",
                    "//span[@data-icon='wds-ic-send-filled']/ancestor::div[@role='button']"
                ]
                send_img_btn = None
                for xpath in send_btn_xpaths:
                    try:
                        send_img_btn = WebDriverWait(driver, 10).until(
                            EC.element_to_be_clickable((By.XPATH, xpath))
                        )
                        break
                    except Exception:
                        continue
                if send_img_btn:
                    driver.execute_script("arguments[0].scrollIntoView(true);", send_img_btn)
                    send_img_btn.click()

            # 7. –û—Ç–ø—Ä–∞–≤–∫–∞ —Ç–µ–∫—Å—Ç–∞
            elif send_text:
                input_xpaths = [
                    "//footer//div[@contenteditable='true' and contains(@aria-label,'–í–≤–µ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ')]",
                    "//footer//div[@contenteditable='true' and @role='textbox']",
                    "//footer//div[@contenteditable='true' and @data-lexical-editor='true']",
                    "//footer//div[@contenteditable='true']"
                ]
                input_div = None
                for ix in input_xpaths:
                    try:
                        input_div = WebDriverWait(driver, 15).until(
                            EC.element_to_be_clickable((By.XPATH, ix))
                        )
                        uid_ctx['logs'].append(f"–ü–æ–ª–µ –≤–≤–æ–¥–∞ –Ω–∞–π–¥–µ–Ω–æ –ø–æ —Å–µ–ª–µ–∫—Ç–æ—Ä—É: {ix}")
                        break
                    except Exception:
                        continue
                if not input_div:
                    uid_ctx['logs'].append("–ü–æ–ª–µ –≤–≤–æ–¥–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
                    raise TimeoutException("–ü–æ–ª–µ –≤–≤–æ–¥–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")

                try:
                    driver.execute_script("arguments[0].focus();", input_div)
                    input_div.click()
                except Exception:
                    pass

                set_text_multiline(driver, input_div, message)

                send_btn_candidates = [
                    "//footer//button[@aria-label='–û—Ç–ø—Ä–∞–≤–∏—Ç—å']",
                    "//footer//*[@role='button' and @aria-label='–û—Ç–ø—Ä–∞–≤–∏—Ç—å']",
                    "//footer//span[@data-icon='send']/ancestor::*[@role='button']",
                    "//footer//span[contains(@data-icon,'send')]/ancestor::*[@role='button']"
                ]
                clicked_send = False
                for sbx in send_btn_candidates:
                    try:
                        send_button = WebDriverWait(driver, 5).until(
                            EC.element_to_be_clickable((By.XPATH, sbx))
                        )
                        driver.execute_script("arguments[0].scrollIntoView(true);", send_button)
                        send_button.click()
                        uid_ctx['logs'].append(f"–û—Ç–ø—Ä–∞–≤–∫–∞ —á–µ—Ä–µ–∑ –∫–Ω–æ–ø–∫—É: {sbx}")
                        clicked_send = True
                        break
                    except Exception:
                        continue
                if not clicked_send:
                    uid_ctx['logs'].append("–ö–Ω–æ–ø–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞, –æ—Ç–ø—Ä–∞–≤–ª—è—é Enter")
                    input_div.send_keys(Keys.ENTER)
                time.sleep(0.6)

            # –ü–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—Ç–º–µ—á–∞–µ–º –≤ –ø—Ä–æ–≥—Ä–µ—Å—Å–µ
            for item in uid_ctx['progress_list']:
                if item['number'] == number:
                    item['sent'] = True
                    item['current'] = False
            uid_ctx['success_count'] += 1
            already_sent_numbers.add(number)

        except Exception as e:
            # –ï—Å–ª–∏ –æ—à–∏–±–∫–∞ ‚Äî –æ—Ç–º–µ—á–∞–µ–º –∫–∞–∫ –Ω–µ—É—Å–ø–µ—à–Ω—ã–π
            for item in uid_ctx['progress_list']:
                if item['number'] == number:
                    item['current'] = False
            uid_ctx['failed_numbers'].append(number)
            uid_ctx['failed_count'] += 1
            # –õ–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫—É
            uid_ctx['logs'].append(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –Ω–∞ –Ω–æ–º–µ—Ä {number}: {str(e)}")

        if not uid_ctx.get('stop_flag'):
            if interval_min == interval_max:
                pause = interval_min
            else:
                pause = random.uniform(interval_min, interval_max)
            uid_ctx['logs'].append(f"‚è± –ü–∞—É–∑–∞ {pause:.1f} —Å–µ–∫.")
            time.sleep(pause)

    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—ã–π –æ—Ç—á–µ—Ç
    total_numbers = len(uid_ctx['progress_list'])
    success_rate = (uid_ctx['success_count'] / total_numbers * 100) if total_numbers > 0 else 0
    
    uid_ctx['logs'].append(f"""
=== –§–ò–ù–ê–õ–¨–ù–´–ô –û–¢–ß–ï–¢ ===
–í—Å–µ–≥–æ –Ω–æ–º–µ—Ä–æ–≤: {total_numbers}
–£—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: {uid_ctx['success_count']}
–ù–µ—É—Å–ø–µ—à–Ω–æ: {uid_ctx['failed_count']}
–ü—Ä–æ—Ü–µ–Ω—Ç —É—Å–ø–µ—Ö–∞: {success_rate:.1f}%

–ù–µ—É—Å–ø–µ—à–Ω—ã–µ –Ω–æ–º–µ—Ä–∞:
{chr(10).join(uid_ctx['failed_numbers']) if uid_ctx['failed_numbers'] else '–ù–µ—Ç'}
=======================
""")

    uid_ctx['sending_flag'] = False
    uid_ctx['stop_flag'] = False
    
    # –û—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
    if image_path:
        try:
            os.remove(image_path)
        except:
            pass
    
    # –ó–∞–∫—Ä—ã—Ç—å –±—Ä–∞—É–∑–µ—Ä –ø–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—é —Ä–∞—Å—Å—ã–ª–∫–∏
    try:
        close_session(uid)
    except Exception:
        pass

@app.route('/progress')
def progress():
    uid, ctx = get_ctx()
    progress_list = ctx.get('progress_list', [])
    sent_count = sum(1 for x in progress_list if x.get('sent'))
    return jsonify(total=len(progress_list), sent_count=sent_count, status=progress_list)

@app.route('/stop', methods=['POST'])
def stop():
    uid, ctx = get_ctx()
    ctx['stop_flag'] = True
    return jsonify(success=True)

@app.route('/logs')
def get_logs():
    uid, ctx = get_ctx()
    return "\n".join(ctx.get('logs', []))

@app.route('/final_report')
def get_final_report():
    uid, ctx = get_ctx()
    if not ctx.get('sending_flag') and ctx.get('progress_list'):
        # –†–∞—Å—Å—ã–ª–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—ã–π –æ—Ç—á–µ—Ç
        total_numbers = len(ctx.get('progress_list', []))
        success_count = ctx.get('success_count', 0)
        failed_count = ctx.get('failed_count', 0)
        failed_numbers = ctx.get('failed_numbers', [])
        success_rate = (success_count / total_numbers * 100) if total_numbers > 0 else 0
        
        return jsonify({
            'success': True,
            'report': {
                'total_numbers': total_numbers,
                'success_count': success_count,
                'failed_count': failed_count,
                'success_rate': round(success_rate, 1),
                'failed_numbers': failed_numbers,
                'logs': ctx.get('logs', [])
            }
        })
    else:
        return jsonify({
            'success': False,
            'message': '–†–∞—Å—Å—ã–ª–∫–∞ –µ—â–µ –Ω–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ –∏–ª–∏ –Ω–µ –±—ã–ª–∞ –∑–∞–ø—É—â–µ–Ω–∞'
        })

if __name__ == "__main__":
    app.run(host='0.0.0.0', port=5000, debug=True)